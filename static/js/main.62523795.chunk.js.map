{"version":3,"sources":["components/Navbar.js","components/ElementCard.js","components/PokemonDetails.js","components/PokemonComparison.js","redux/actions/pokemonActions.js","components/PokemonList.js","components/ItemDetails.js","redux/actions/itemActions.js","components/ItemsList.js","redux/reducers/pokemonReducers.js","redux/reducers/itemReducers.js","store.js","components/Home.js","libraries.js","App.js","serviceWorker.js","index.js"],"names":["NavbarComponent","Navbar","color","sticky","NavbarBrand","to","className","Nav","NavItem","activeClassName","Form","inline","FormGroup","Input","type","name","id","placeholder","onChange","this","props","Component","ElementCard","Card","key","tag","style","width","onClick","CardImg","src","img","CardFooter","PokemonDetails","selectedPokemon","useVibrant","imageUrl","colors","done","alt","description","height","weight","gender","abilities","map","ability","index","types","aspect","data","stats","margin","top","right","left","bottom","dataKey","tick","fontSize","fill","DarkVibrant","hex","PokemonComparison","pokemon1","pokemon2","arr","i","length","str","power","push","JSON","parse","comparisonStats","Vibrant","SELECT_POKEMON","SELECT_SAVED_POKEMON","UNSELECT_POKEMONS","COMPARE_POKEMON","SAVE_POKEMON","PokemonList","useState","pokemonList","setPokemonList","isLoading","loading","isComparing","comparing","modal","setModal","comparisonModal","setComparisonModal","setIndex","reloader","useSelector","state","pokemonReducers","pokemonBeingCompared","comparison","savedPokemons","dispatcher","useDispatch","useEffect","axios","get","then","res","results","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","loadPokemons","a","newIndex","modalToggle","e","getPokemonDetails","cardId","filter","pokemon","undefined","savedPokemonsFilter","payload","fetchPokemonData","pokemonData","pokemonAbilities","pokemonStats","pokemonTypes","all","spread","res1","res2","response1","response2","stat","base_stat","flavor_text_entries","flavor_text","gender_rate","pokemonCards","searchInput","includes","Toast","position","ToastHeader","ToastBody","Modal","isOpen","toggle","ModalHeader","Button","size","ItemDetails","selectedItem","attributes","cost","item","SELECT_ITEM","UNSELECT_ITEM","SELECT_SAVED_ITEM","ItemsList","itemsList","setItemsList","setLoading","itemReducers","savedItems","loadItems","getItemDetails","itemId","fetchDetails","itemAttributes","response","effect_entries","effect","itemsCards","CardDeck","initialState","action","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","librariesList","title","url","Home","Jumbotron","href","App","setSearch","handleChange","target","value","toLowerCase","exact","path","Boolean","location","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oVA8BeA,E,iLAxBP,OACI,kBAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAO,OACzB,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAASC,GAAG,IAAIC,UAAU,gBAA1B,eAEJ,kBAACC,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACE,EAAA,EAAD,CAASF,UAAU,QACf,kBAAC,IAAD,CAASD,GAAG,YAAYC,UAAU,eAAeG,gBAAgB,cAAjE,aAEJ,kBAACD,EAAA,EAAD,KACI,kBAAC,IAAD,CAASH,GAAG,SAAUC,UAAU,eAAgBG,gBAAgB,cAAhE,WAGR,kBAACC,EAAA,EAAD,CAAMC,QAAM,GACR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,KAAK,SAASC,KAAK,SAASC,GAAG,cAClCC,YAAY,SAASX,UAAU,UAAUY,SAAUC,KAAKC,MAAMF,kB,GAlB5DG,a,mICafC,E,iLAZD,IAAD,OACL,OACI,yBAAKhB,UAAU,QACX,kBAACiB,EAAA,EAAD,CAAMC,IAAKL,KAAKC,MAAMJ,GAAIS,IAAI,IAAIC,MAAO,CAAEC,MAAO,SAAWC,QAAS,kBAAM,EAAKR,MAAMQ,QAAQ,KAC3F,kBAACC,EAAA,EAAD,CAASC,IAAKX,KAAKC,MAAMW,MACrB,kBAACC,EAAA,EAAD,CAAY1B,UAAU,oCAAoCa,KAAKC,MAAML,Y,GAPnEM,a,yBCwEXY,EAvEQ,SAACb,GACpB,IAAMc,EAAkBd,EAAMc,gBADA,EAELC,IAAWD,EAAgBE,UAA5CC,EAFsB,EAEtBA,OAAQC,EAFc,EAEdA,KAGhB,OACI,yBAAKhC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,OAAOwB,IAAKI,EAAgBE,SAAUT,MAAM,QAAQY,IAAI,MAE3E,yBAAKjC,UAAU,SACX,6BACA,2BAAI4B,EAAgBM,aACpB,6BACA,2BAAOb,MAAM,OAAOrB,UAAU,QAC1B,+BACI,4BACI,wBAAIqB,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,WAEJ,4BACI,4BAAKO,EAAgBO,OAArB,KACA,4BAAKP,EAAgBQ,OAArB,MACA,4BAAKR,EAAgBS,WAIjC,2BAAOhB,MAAM,QACT,+BACI,4BACI,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,SAEJ,4BACI,4BACI,4BACKO,EAAgBU,UAAUC,KAAI,SAACC,EAASC,GAAV,OAAoB,wBAAIvB,IAAKuB,GAAQD,QAG5E,4BACI,4BACKZ,EAAgBc,MAAMH,KAAI,SAAC/B,EAAMiC,GAAP,OAAiB,wBAAIvB,IAAKuB,GAAQjC,YAQrF,yBAAKR,UAAU,OACX,6BACA,wBAAIA,UAAU,eAAc,qCAC3BgC,GACG,kBAAC,IAAD,CAAqBX,MAAM,OAAOsB,OAAQ,EAAM,GAC5C,kBAAC,IAAD,CAAUC,KAAMhB,EAAgBiB,MAC5BC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAChD,kBAAC,IAAD,CAAOC,QAAQ,OAAOC,KAAM,CAAEC,SAAU,MACxC,kBAAC,IAAD,CAAOD,KAAM,CAAEC,SAAU,MACzB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKF,QAAQ,QAAQG,KAAMvB,EAAOwB,YAAYC,YCgB/DC,EA7EW,SAAC3C,GACvB,IAAM4C,EAAW5C,EAAM4C,SAAUC,EAAW7C,EAAM6C,SADjB,EAER9B,IAAW6B,EAAS5B,UAArCC,EAFyB,EAEzBA,OAAQC,EAFiB,EAEjBA,KAaVa,EAXkB,WAEpB,IADA,IAAIe,EAAM,GACDC,EAAI,EAAGA,EAAIH,EAASb,MAAMiB,OAAQD,IAAK,CAC5C,IAAIE,EAAM,aAAkBL,EAASb,MAAMgB,GAAGpD,KAAO,OAAWiD,EAASjD,KACnE,OAAWiD,EAASb,MAAMgB,GAAGG,MAAQ,OAAWL,EAASlD,KAAO,OAChEkD,EAASd,MAAMgB,GAAGG,MAAQ,MAChCJ,EAAIK,KAAKC,KAAKC,MAAMJ,IAExB,OAAOH,EAGGQ,GAEd,OACI,yBAAKpE,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,0CACX,yBAAKA,UAAU,OAAOwB,IAAKkC,EAAS5B,SAAUT,MAAM,QAAQY,IAAI,MAEpE,yBAAKjC,UAAU,0CACX,yBAAKA,UAAU,OAAOwB,IAAKmC,EAAS7B,SAAUT,MAAM,QAAQY,IAAI,OAGxE,6BACA,2BAAOZ,MAAM,OAAOrB,UAAU,uBAC1B,+BACI,4BACI,wBAAIqB,MAAM,OAAOqC,EAASvB,OAA1B,KACA,wBAAId,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAOsC,EAASxB,OAA1B,MAEJ,4BACI,4BAAKuB,EAAStB,OAAd,MACA,sCACA,4BAAKuB,EAASvB,OAAd,OAEJ,4BACI,4BAAKsB,EAASrB,QACd,sCACA,4BAAKsB,EAAStB,SAElB,4BACI,4BACKqB,EAASpB,UAAUC,KAAI,SAACC,EAASC,GAAV,OAAoB,6BAAMD,OAEtD,yCACA,4BACKmB,EAASrB,UAAUC,KAAI,SAACC,EAASC,GAAV,OAAoB,6BAAMD,UAMlE,yBAAKxC,UAAU,OACX,6BACA,wBAAIA,UAAU,eAAc,qCAC3BgC,GACG,kBAAC,IAAD,CAAqBX,MAAM,OAAOsB,OAAQ,EAAM,GAC5C,kBAAC,IAAD,CAAUC,KAAMC,EACZC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAChD,kBAAC,IAAD,CAAOC,QAAQ,OAAOC,KAAM,CAAEC,SAAU,MACxC,kBAAC,IAAD,CAAOD,KAAM,CAAEC,SAAU,MACzB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKF,QAASO,EAASjD,KAAM6C,KAAMvB,EAAOwB,YAAYC,MACtD,kBAAC,IAAD,CAAKL,QAASQ,EAASlD,KAAM6C,KAAMvB,EAAOsC,QAAQb,W,QCxEjEc,EAAiB,iBACjBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAmB,kBACnBC,EAAe,eCoLbC,MA/Kf,SAAqB7D,GAAQ,IAAD,EACc8D,mBAAS,IADvB,mBACjBC,EADiB,KACJC,EADI,OAEKF,oBAAS,GAFd,mBAEjBG,EAFiB,KAENC,EAFM,OAGSJ,oBAAS,GAHlB,mBAGjBK,EAHiB,KAGJC,EAHI,OAIEN,oBAAS,GAJX,mBAIjBO,EAJiB,KAIVC,EAJU,OAKsBR,oBAAS,GAL/B,mBAKjBS,EALiB,KAKAC,EALA,OAMEV,mBAAS,GANX,mBAMjBnC,EANiB,KAMV8C,EANU,OAOLX,mBAAS,GAArBY,EAPiB,oBASlB5D,EAAkB6D,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBAAgB/D,mBAC7DgE,EAAuBH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBAAgBE,cAClEC,EAAgBL,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBAAgBG,iBAC3DC,EAAaC,cAEnBC,qBAAU,WACNC,IAAMC,IAAI,qCACLC,MAAK,SAAAC,GAAG,OAAIvB,EAAeuB,EAAIzD,KAAK0D,cAC1C,CAACd,IAEJe,OAAOC,SAAY,WACXzB,GACAwB,OAAOE,YAAcC,SAASC,gBAAgBC,YAAcF,SAASC,gBAAgBE,cACrFC,KAIR,IAAMA,EAAY,uCAAG,8BAAAC,EAAA,6DACjB/B,GAAQ,GAERO,EADMyB,EAAWvE,EAAQ,IAFR,SAICyD,IAAMC,IAAI,4CAA+Ca,EAAY,aAJtE,OAIXX,EAJW,OAKjBvB,EAAe,GAAD,mBAAKD,GAAL,YAAqBwB,EAAIzD,KAAK0D,WAC5CtB,GAAQ,GANS,2CAAH,qDASZiC,GAAW,uCAAG,WAAOC,GAAP,SAAAH,EAAA,0DACZ9B,EADY,oBAEPI,EAFO,gCAGF8B,GAAkBD,GAHhB,6BAKRhC,GAAU,GACVa,EAAW,CAAEvF,KAAMgE,IANX,OAQZc,GAAoBD,GARR,2BAWPF,EAXO,kCAYFgC,GAAkBD,GAZhB,gCAcRnB,EAAW,CAAEvF,KAAMgE,IAdX,QAeZY,GAAUD,GAfE,4CAAH,sDAwBXgC,GAAiB,uCAAG,WAAOD,GAAP,mBAAAH,EAAA,6DAChBK,EAASF,EAAEpG,MAAMJ,GADD,SAEYoF,EAAcuB,QAAO,SAAAC,GAAO,OAAKA,EAAQ5G,KAAQ0G,KAF7D,eAGSG,KADzBC,EAFgB,QAGE,GAHF,gBAKdzB,EADAd,EACW,CAAEzE,KAAMiE,EAAiBgD,QAAS,CAAE7F,gBAAiB4F,EAAoB,KAEzE,CAAEhH,KAAM+D,EAAsBkD,QAAS,CAAE/G,GAAK0G,KAP3C,wCASQM,GAAiBN,GATzB,QASZO,EATY,OAUlB5B,EAAW,CAAEvF,KAAMyE,EAAcR,EAAkBH,EAAgBmD,QAAS,CAAE7F,gBAAiB+F,KAC/F5B,EAAW,CAAEvF,KAAMkE,EAAc+C,QAAS,CAAE7F,gBAAiB+F,KAX3C,4CAAH,sDAejBD,GAAgB,uCAAG,WAAOhH,GAAP,uBAAAqG,EAAA,6DACjBa,EAAmB,GAAIC,EAAe,GAAIC,EAAe,GADxC,SAGf5B,IAAM6B,IAAI,CACZ7B,IAAMC,IAAI,qCAAuCzF,GACjDwF,IAAMC,IAAI,6CAA+CzF,KAC1D0F,KAAKF,IAAM8B,QAAO,SAACC,EAAMC,GACxBC,EAAYF,EAAKrF,KACjBwF,EAAYF,EAAKtF,KAEjB,IAAK,IAAIiB,EAAI,EAAGA,EAAIoE,EAAKrF,KAAKC,MAAMiB,OAAQD,IACxCgE,EAAa5D,KAAKC,KAAKC,MACnB,cAAmB8D,EAAKrF,KAAKC,MAAMgB,GAAGwE,KAAK5H,KAAO,gBAAsBwH,EAAKrF,KAAKC,MAAMgB,GAAGyE,UAAY,QAI/G,IAAKzE,EAAI,EAAGA,EAAIoE,EAAKrF,KAAKN,UAAUwB,OAAQD,IACxC+D,EAAiB3D,KAAKgE,EAAKrF,KAAKN,UAAUuB,GAAGrB,QAAQ/B,MAGzD,IAAKoD,EAAI,EAAGA,EAAIoE,EAAKrF,KAAKF,MAAMoB,OAAQD,IACpCiE,EAAa7D,KAAKgE,EAAKrF,KAAKF,MAAMmB,GAAGrD,KAAKC,UArB7B,gCAyBd,CACHC,GAAIA,EACJD,KAAM0H,EAAU1H,KAChB2B,OAAQ+F,EAAU/F,OAClBD,OAAQgG,EAAUhG,OAClBG,UAAWsF,EACXlF,MAAOoF,EACPjF,MAAOgF,EACP3F,YAAakG,EAAUG,oBAAoB,GAAGC,YAC9CnG,OAAU8F,EAAUM,YAAc,EAAMN,EAAUvF,KAAK6F,YAAmB,OAAwB,SAClG3G,SAAU,4EAA8EpB,EAAK,SAnC5E,2CAAH,sDAuChBgI,GAAe7D,EAAYtC,KAAI,SAAC+E,EAAS7E,GAC3C,OAAiC,IAA7B3B,EAAM6H,YAAY7E,OACdwD,EAAQ7G,KAAKmI,SAAS9H,EAAM6H,aAExB,kBAAC,EAAD,CAAazH,IAAKuB,EAAQ,EAAGhC,KAAM6G,EAAQ7G,KAAMC,GAAI+B,EAAQ,EAAGnB,QAAS2F,GACrExF,IAAG,mFAA8EgB,EAAQ,EAAtF,UAED,GAId,kBAAC,EAAD,CAAavB,IAAKuB,EAAQ,EAAGhC,KAAM6G,EAAQ7G,KAAMC,GAAI+B,EAAQ,EAAGnB,QAAS2F,GACrExF,IAAG,mFAA8EgB,EAAQ,EAAtF,aAIf,OACI,6BACI,yBAAKzC,UAAU,kBACX,yBAAKA,UAAU,oCACV0I,IAGHzD,IAAgBI,GACd,kBAACwD,EAAA,EAAD,CAAOzH,MAAO,CACV0H,SAAU,QACV9F,MAAO,OACPD,IAAK,SAEL,kBAACgG,EAAA,EAAD,0BAGA,kBAACC,EAAA,EAAD,CAAWhJ,UAAU,mCAChB4B,EAAgBnB,OAK7B,kBAACwI,EAAA,EAAD,CAAOC,OAAQ/D,EAAOgE,OAAQlC,IAC1B,kBAACmC,EAAA,EAAD,CAAapJ,UAAU,iBAAiBmJ,OAAQlC,IAC5C,2BAAIrF,EAAgBnB,MACpB,kBAAC4I,EAAA,EAAD,CAAQC,KAAK,KAAKtJ,UAAU,iBAAiBsB,QApGxC,WACrB8D,GAAS,GACTF,GAAU,KAkGM,kBAEHC,GACG,kBAAC,EAAD,CAAgBvD,gBAAiBA,KAIzC,kBAACqH,EAAA,EAAD,CAAOC,OAAQ7D,EAAiB8D,OAAQlC,IACpC,kBAACmC,EAAA,EAAD,CAAapJ,UAAU,iBAAiBmJ,OAAQlC,IAC5C,2BAAIrF,EAAgBnB,KAApB,QAA+BmF,EAAqBnF,OAEvD4E,GACG,kBAAC,EAAD,CAAmB3B,SAAU9B,EAAiB+B,SAAUiC,QC7KjE,SAAS2D,EAAYzI,GAChC,IAAM0I,EAAe1I,EAAM0I,aAE3B,OACI,yBAAKxJ,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,OAAOwB,IAAKgI,EAAa1H,SAAUT,MAAM,QAAQY,IAAI,MAExE,yBAAKjC,UAAU,SACX,6BACA,2BAAIwJ,EAAatH,aACjB,6BACA,2BAAOb,MAAM,QACT,+BACI,4BACI,wBAAIA,MAAM,OAAV,aACgCkG,IAA/BiC,EAAaC,WAAW,IACrB,wBAAIpI,MAAM,OAAV,eAGR,4BACI,4BAAKmI,EAAaE,MAClB,4BACI,4BACKF,EAAaC,WAAWlH,KAAI,SAACoH,EAAMlH,GAAP,OAAiB,wBAAIvB,IAAKuB,GAAQkH,WAOnF,gC,aClCPC,EAAc,cACdC,GAAgB,gBAChBC,GAAoB,oBCMlB,SAASC,GAAUjJ,GAAQ,IAAD,EACL8D,mBAAS,IADJ,mBAChCoF,EADgC,KACrBC,EADqB,OAEpBrF,mBAAS,GAArBY,EAFgC,sBAGbZ,mBAAS,GAHI,mBAGhCnC,EAHgC,KAGzB8C,EAHyB,OAIbX,oBAAS,GAJI,mBAIhCO,EAJgC,KAIzBC,EAJyB,OAKPR,oBAAS,GALF,mBAKhCG,EALgC,KAKrBmF,EALqB,KAQjCV,EAAe/D,aAAY,SAAAC,GAAK,OAAIA,EAAMyE,aAAaX,gBACvDY,EAAa3E,aAAY,SAAAC,GAAK,OAAIA,EAAMyE,aAAaC,cACrDrE,EAAaC,cAEnBC,qBAAU,WACRC,IAAMC,IAAI,kCACPC,MAAK,SAAAC,GAAG,OAAI4D,EAAa5D,EAAIzD,KAAK0D,cACpC,CAACd,IAEJe,OAAOC,SAAY,WACbzB,GACAwB,OAAOE,YAAcC,SAASC,gBAAgBC,YAAcF,SAASC,gBAAgBE,cACvFwD,KAIJ,IAAMpD,EAAW,uCAAG,WAAOC,GAAP,SAAAH,EAAA,yDACb5B,EADa,gCAEVmF,EAAepD,EAAEpG,MAAMJ,IAFb,6BAIhBqF,EAAW,CAAEvF,KAAMqJ,KAJH,OAKlBzE,GAAUD,GALQ,2CAAH,sDAQXmF,EAAc,uCAAG,WAAOC,GAAP,SAAAxD,EAAA,8DAEGQ,IADH6C,EAAW/C,QAAO,SAAAsC,GAAI,OAAIA,EAAKjJ,KAAO6J,KAC1C,GAFI,6BAGnBxE,EAHmB,KAGA6D,EAHA,SAG4CY,EAAaD,GAHzD,yBAGwBf,aAHxB,YAGNhJ,KAHM,KAGaiH,QAHb,6CAKnB1B,EAAW,CAAEvF,KAAMsJ,GAAmBrC,QAAS,CAAE/G,GAAI6J,KALlC,4CAAH,sDASdC,EAAY,uCAAG,WAAOD,GAAP,iBAAAxD,EAAA,6DAEf0D,EAAiB,GAFF,SAIbvE,IAAMC,IAAI,kCAAoCoE,GACjDnE,MAAK,SAAAC,GACJqE,EAAWrE,EAAIzD,KACf,IAAK,IAAIiB,EAAI,EAAGA,EAAI6G,EAASjB,WAAW3F,OAAQD,IAC9C4G,EAAexG,KAAKyG,EAASjB,WAAW5F,GAAGpD,SAR9B,gCAYZ,CACLC,GAAI6J,EACJ9J,KAAMiK,EAASjK,KACfiJ,KAAMgB,EAAShB,KACfxH,YAAawI,EAASC,eAAe,GAAGC,OACxCnB,WAAYgB,EACZ3I,SAAU,0EAA4E4I,EAASjK,KAAO,SAlBrF,2CAAH,sDAuBZoK,EAAab,EAAUzH,KAAI,SAACoH,EAAMlH,GACtC,YAA0B8E,IAAtBzG,EAAM6H,YACJgB,EAAKlJ,KAAKmI,SAAS9H,EAAM6H,aAEzB,kBAAC,EAAD,CAAajI,GAAI+B,EAAQ,EAAGvB,IAAKuB,EAAQ,EAAGhC,KAAMkJ,EAAKlJ,KAAMa,QAAS2F,EACpExF,IAAK,0EAA4EkI,EAAKlJ,KAAO,SAErF,GAId,kBAAC,EAAD,CAAaC,GAAI+B,EAAQ,EAAGvB,IAAKuB,EAAQ,EAAGhC,KAAMkJ,EAAKlJ,KAAMa,QAAS2F,EACpExF,IAAK,0EAA4EkI,EAAKlJ,KAAO,YAI7F4J,EAAS,uCAAG,8BAAAtD,EAAA,6DAChBmD,GAAW,GAEX3E,EADMyB,EAAWvE,EAAQ,IAFT,SAIEyD,IAAMC,IAAI,0CAA4Ca,EAAW,aAJnE,OAIVX,EAJU,OAKhB4D,EAAa,GAAD,mBAAKD,GAAL,YAAmB3D,EAAIzD,KAAK0D,WACxC4D,GAAW,GANK,2CAAH,qDASf,OACE,yBAAKlK,UAAU,kBACb,kBAAC8K,EAAA,EAAD,CAAU9K,UAAU,0BACjB6K,GAGH,kBAAC5B,EAAA,EAAD,CAAOC,OAAQ/D,EAAOgE,OAAQlC,GAC5B,kBAACmC,EAAA,EAAD,CAAapJ,UAAU,iBAAiBmJ,OAAQlC,GAC9C,2BAAIuC,EAAa/I,OAElB0E,GACC,kBAACoE,EAAD,CAAaC,aAAcA,M,omBCvGrC,IAAMuB,GAAe,CACjBnJ,gBAAiB,GACjBiE,WAAY,GACZC,cAAe,IAmCJH,OAhCf,WAAwD,IAA/BD,EAA8B,uDAAtBqF,GAAcC,EAAQ,uCACnD,OAAQA,EAAOxK,MACX,KAAK8D,EACD,OAAO,GAAP,GACOoB,EADP,CAEI9D,gBAAiBoJ,EAAOvD,QAAQ7F,kBAExC,KAAK2C,EACD,OAAO,GAAP,GACOmB,EADP,CAEI9D,gBAAiB8D,EAAMI,cAAcuB,QAAO,SAAAC,GAAO,OAAIA,EAAQ5G,KAAOsK,EAAOvD,QAAQ/G,MAAI,KAEjG,KAAK8D,EACD,OAAO,GAAP,GACOkB,EADP,CACc9D,gBAAiB,GAAIiE,WAAY,KAGnD,KAAKpB,EACD,OAAO,GAAP,GACOiB,EADP,CAEIG,WAAYmF,EAAOvD,QAAQ7F,kBAEnC,KAAK8C,EACD,OAAO,GAAP,GACOgB,EADP,CAEII,cAAc,GAAD,mBAAMJ,EAAMI,eAAZ,CAA2BkF,EAAOvD,QAAQ7F,oBAE/D,QACI,OAAO8D,I,8kBCrCnB,IAAMqF,GAAe,CACjBvB,aAAc,GACdY,WAAY,IAyBDD,OAtBf,WAAqD,IAA/BzE,EAA8B,uDAAtBqF,GAAcC,EAAQ,uCAChD,OAAQA,EAAOxK,MACX,KAAKoJ,EACD,MAAO,CACHJ,aAAcwB,EAAOvD,QAAQ+B,aAC7BY,WAAW,GAAD,mBAAM1E,EAAM0E,YAAZ,CAAwBY,EAAOvD,QAAQ+B,gBAEzD,KAAKM,GACD,OAAO,MACApE,EADP,CAEI8D,aAAc9D,EAAM0E,WAAW/C,QAAO,SAAAsC,GAAI,OAAIA,EAAKjJ,KAAOsK,EAAOvD,QAAQ/G,MAAI,KAErF,KAAKmJ,GACD,OAAO,MACAnE,EADP,CAEI8D,aAAc,KAEtB,QACI,OAAO9D,ICrBbuF,GAAcC,aAAgB,CAChCvF,mBACAwE,kBAOWgB,GAJDC,aAAYH,GAC1B1E,OAAO8E,8BACP9E,OAAO8E,gC,UCLDC,GCNY,CACd,CACIC,MAAO,QACP/J,IAAK,oGACLU,YAAa,gCACbsJ,IAAK,+BAET,CACID,MAAO,aACP/J,IAAK,+CACLU,YAAa,+CACbsJ,IAAK,iCAET,CACID,MAAO,YACP/J,IAAK,6DACLU,YAAa,8BACbsJ,IAAK,6BAET,CACID,MAAO,QACP/J,IAAK,sGACLU,YAAa,qCACbsJ,IAAK,kCAET,CACID,MAAO,WACP/J,IAAK,wGACLU,YAAa,sDACbsJ,IAAK,6BAET,CACID,MAAO,eACP/J,IAAK,iEACLU,YAAa,4CACbsJ,IAAK,iEAET,CACID,MAAO,aACP/J,IAAK,oGACLU,YAAa,uDACbsJ,IAAK,wCDnCmBjJ,KAAI,SAACoH,EAAMlH,GACvC,OACI,kBAAC,EAAD,CAAa/B,GAAI+B,EAAOvB,IAAKuB,EAAOhB,IAAKkI,EAAKnI,IAAKf,KAAMkJ,EAAK4B,WAgCvDE,GA3BF,WACT,OACI,yBAAKzL,UAAU,aACX,6BACA,kBAAC0L,GAAA,EAAD,CAAW1L,UAAU,eACjB,wBAAIA,UAAU,aAAd,0BACA,6DAAkC,uBAAG2L,KAAK,sBAAR,cAAlC,sBACA,uBAAG3L,UAAU,QACT,kBAAC,IAAD,CAAMD,GAAG,aACL,kBAACsJ,EAAA,EAAD,CAAQrJ,UAAU,OAAOJ,MAAM,aAA/B,8BAEJ,kBAAC,IAAD,CAAMG,GAAG,UACL,kBAACsJ,EAAA,EAAD,CAAQzJ,MAAM,aAAd,2BAKZ,6BACA,wBAAII,UAAU,eAAd,kDACA,6BACA,kBAAC8K,EAAA,EAAD,CAAU9K,UAAU,0BACfsL,MEKFM,OA9Bf,WAAgB,IAAD,EACoBhH,mBAAS,IAD7B,mBACN+D,EADM,KACOkD,EADP,KAGPC,EAAe,SAAA5E,GACnB2E,EAAU3E,EAAE6E,OAAOC,MAAMC,gBAG3B,OACE,kBAAC,IAAD,CAAUd,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CAAQvL,SAAUkL,IAClB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,aAChB,kBAAC,EAAD,CAAQvL,SAAUkL,IAClB,kBAAC,EAAD,CAAanD,YAAaA,KAE5B,kBAAC,IAAD,CAAOwD,KAAK,UACV,kBAAC,EAAD,CAAQvL,SAAUkL,IAClB,kBAAC/B,GAAD,CAAWpB,YAAaA,KAE1B,kBAAC,IAAD,CAAOwD,KAAK,KACV,wBAAInM,UAAU,QAAd,sBCpBUoM,QACW,cAA7B7F,OAAO8F,SAASC,UAEe,UAA7B/F,OAAO8F,SAASC,UAEhB/F,OAAO8F,SAASC,SAASC,MACvB,2D,OCVNC,IAASC,OACL,kBAAC,IAAD,CAAQC,SAAS,KACb,kBAAC,GAAD,OACOhG,SAASiG,eAAe,SDsHjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1G,MAAK,SAAA2G,GACjCA,EAAaC,kB","file":"static/js/main.62523795.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavItem, Form, FormGroup, Input } from 'reactstrap';\nimport { NavLink } from \"react-router-dom\";\n\nclass NavbarComponent extends Component {\n    render() {\n        return (\n            <Navbar color=\"light\" sticky=\"top\">\n                <NavbarBrand>\n                    <NavLink to=\"/\" className=\"navbar-links\">PokéApp</NavLink>\n                </NavbarBrand>\n                <Nav className=\"mr-auto\">\n                    <NavItem className=\"mr-2\">\n                        <NavLink to=\"/pokemons\" className=\"navbar-links\" activeClassName=\"activeLink\">Pokemons</NavLink>\n                    </NavItem>\n                    <NavItem >\n                        <NavLink to=\"/items\"  className=\"navbar-links\"  activeClassName=\"activeLink\">Items</NavLink>\n                    </NavItem>\n                </Nav>\n                <Form inline>\n                    <FormGroup>\n                        <Input type=\"search\" name=\"search\" id=\"searchInput\"\n                            placeholder=\"Search\" className=\"mr-auto\" onChange={this.props.onChange} />\n                    </FormGroup>\n                </Form>\n            </Navbar>\n        );\n    }\n}\n\nexport default NavbarComponent;","import React, { Component } from 'react';\nimport { Card, CardImg, CardFooter } from 'reactstrap';\n\nclass ElementCard extends Component {\n\n    render() {\n        return (\n            <div className=\"mb-4\">\n                <Card key={this.props.id} tag=\"a\" style={{ width: \"180px\" }} onClick={() => this.props.onClick(this)}>\n                    <CardImg src={this.props.img}/>\n                        <CardFooter className=\"badge text-center text-uppercase\">{this.props.name}</CardFooter>\n                </Card>\n            </div >\n        );\n    }\n}\n\nexport default ElementCard;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport useVibrant from 'use-vibrant-hook';\n\nconst PokemonDetails = (props) => {\n    const selectedPokemon = props.selectedPokemon;\n    const { colors, done } = useVibrant(selectedPokemon.imageUrl);\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-4 \">\n                    <img className=\"mt-4\" src={selectedPokemon.imageUrl} width=\"150px\" alt=\"\" />\n                </div>\n                <div className=\"col-8\">\n                    <br />\n                    <p>{selectedPokemon.description}</p>\n                    <hr />\n                    <table width=\"100%\" className=\"mb-1\">\n                        <tbody>\n                            <tr>\n                                <th width=\"30%\">Height</th>\n                                <th width=\"30%\">Weight</th>\n                                <th width=\"40%\">Gender</th>\n                            </tr>\n                            <tr>\n                                <td>{selectedPokemon.height}m</td>\n                                <td>{selectedPokemon.weight}kg</td>\n                                <td>{selectedPokemon.gender}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <table width=\"100%\" >\n                        <tbody>\n                            <tr>\n                                <th width=\"50%\">Abilities</th>\n                                <th width=\"50%\">Type</th>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <ul>\n                                        {selectedPokemon.abilities.map((ability, index) => <li key={index}>{ability}</li>)}\n                                    </ul>\n                                </td>\n                                <td>\n                                    <ul>\n                                        {selectedPokemon.types.map((type, index) => <li key={index}>{type}</li>)}\n                                    </ul>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"col\">\n                    <hr />\n                    <h5 className=\"text-center\"><b>Stats</b></h5>\n                    {done &&\n                        <ResponsiveContainer width='100%' aspect={5.0 / 3.0}>\n                            <BarChart data={selectedPokemon.stats}\n                                margin={{ top: 10, right: 30, left: 10, bottom: 5 }}>\n                                <XAxis dataKey=\"name\" tick={{ fontSize: 15 }} />\n                                <YAxis tick={{ fontSize: 15 }} />\n                                <Tooltip />\n                                <Bar dataKey=\"power\" fill={colors.DarkVibrant.hex} />\n                            </BarChart>\n                        </ResponsiveContainer>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PokemonDetails;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport useVibrant from 'use-vibrant-hook';\n\nconst PokemonComparison = (props) => {\n    const pokemon1 = props.pokemon1, pokemon2 = props.pokemon2;\n    const { colors, done } = useVibrant(pokemon1.imageUrl);\n\n    const comparisonStats = () => {\n        var arr = []\n        for (var i = 0; i < pokemon1.stats.length; i++) {\n            var str = \"{\\\"name\\\": \\\"\" + pokemon1.stats[i].name + \"\\\", \\\"\" + pokemon1.name\n                + \"\\\": \\\"\" + pokemon1.stats[i].power + \"\\\", \\\"\" + pokemon2.name + \"\\\": \\\"\"\n                + pokemon2.stats[i].power + \"\\\" }\"\n            arr.push(JSON.parse(str));\n        }\n        return arr;\n    }\n\n    const stats = comparisonStats();\n\n    return (\n        <div className=\"container\">\n            <div className=\"row mx-auto\">\n                <div className=\"col-6 center-block text-center mx-auto\">\n                    <img className=\"mt-4\" src={pokemon1.imageUrl} width=\"150px\" alt=\"\" />\n                </div>\n                <div className=\"col-6 center-block text-center mx-auto\">\n                    <img className=\"mt-4\" src={pokemon2.imageUrl} width=\"150px\" alt=\"\" />\n                </div>\n            </div>\n            <hr />\n            <table width=\"100%\" className=\"text-center mx-auto\">\n                <tbody>\n                    <tr>\n                        <td width=\"38%\">{pokemon1.height}m</td>\n                        <th width=\"24%\">Height</th>\n                        <td width=\"38%\">{pokemon2.height}m</td>\n                    </tr>\n                    <tr>\n                        <td>{pokemon1.weight}kg</td>\n                        <th>Weight</th>\n                        <td>{pokemon2.weight}kg</td>\n                    </tr>\n                    <tr>\n                        <td>{pokemon1.gender}</td>\n                        <th>Gender</th>\n                        <td>{pokemon2.gender}</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            {pokemon1.abilities.map((ability, index) => <div>{ability}</div>)}\n                        </td>\n                        <th>Abilities</th>\n                        <td>\n                            {pokemon2.abilities.map((ability, index) => <div>{ability}</div>)}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <div className=\"col\">\n                <hr />\n                <h5 className=\"text-center\"><b>Stats</b></h5>\n                {done &&\n                    <ResponsiveContainer width='100%' aspect={5.0 / 3.0}>\n                        <BarChart data={stats}\n                            margin={{ top: 10, right: 30, left: 10, bottom: 5 }}>\n                            <XAxis dataKey=\"name\" tick={{ fontSize: 15 }} />\n                            <YAxis tick={{ fontSize: 15 }} />\n                            <Tooltip />\n                            <Bar dataKey={pokemon1.name} fill={colors.DarkVibrant.hex} />\n                            <Bar dataKey={pokemon2.name} fill={colors.Vibrant.hex} />\n                        </BarChart>\n                    </ResponsiveContainer>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default PokemonComparison;","export const SELECT_POKEMON = \"SELECT_POKEMON\";\nexport const SELECT_SAVED_POKEMON = \"SELECT_SAVED_POKEMON\";\nexport const UNSELECT_POKEMONS = \"UNSELECT_POKEMONS\";\nexport const COMPARE_POKEMON =  \"COMPARE_POKEMON\";\nexport const SAVE_POKEMON = \"SAVE_POKEMON\";","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Modal, ModalHeader, Button, Toast, ToastBody, ToastHeader } from 'reactstrap'\nimport ElementCard from './ElementCard'\nimport PokemonDetails from './PokemonDetails';\nimport PokemonComparison from \"./PokemonComparison\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SELECT_POKEMON, SELECT_SAVED_POKEMON, UNSELECT_POKEMONS, COMPARE_POKEMON, SAVE_POKEMON } from \"../redux/actions/pokemonActions\"\n\nfunction PokemonList(props) {\n    const [pokemonList, setPokemonList] = useState([]);\n    const [isLoading, loading] = useState(false);\n    const [isComparing, comparing] = useState(false);\n    const [modal, setModal] = useState(false);\n    const [comparisonModal, setComparisonModal] = useState(false);\n    const [index, setIndex] = useState(0);\n    const [reloader] = useState(0);\n\n    const selectedPokemon = useSelector(state => state.pokemonReducers.selectedPokemon);\n    const pokemonBeingCompared = useSelector(state => state.pokemonReducers.comparison);\n    const savedPokemons = useSelector(state => state.pokemonReducers.savedPokemons);\n    const dispatcher = useDispatch();\n\n    useEffect(() => {\n        axios.get('https://pokeapi.co/api/v2/pokemon')\n            .then(res => setPokemonList(res.data.results));\n    }, [reloader])\n\n    window.onscroll = (() => {\n        if (isLoading) return;\n        if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n            loadPokemons();\n        }\n    });\n\n    const loadPokemons = async () => {\n        loading(true);\n        const newIndex = index + 20;\n        setIndex(newIndex);\n        const res = await axios.get(\"https://pokeapi.co/api/v2/pokemon?offset=\" + (newIndex) + \"&limit=20\");\n        setPokemonList([...pokemonList, ...res.data.results]);\n        loading(false);\n    }\n\n    const modalToggle = async (e) => {\n        if (isComparing) {\n            if (!comparisonModal)\n                await getPokemonDetails(e)\n            else {\n                comparing(false);\n                dispatcher({ type: UNSELECT_POKEMONS });\n            }\n            setComparisonModal(!comparisonModal);\n\n        } else {\n            if (!modal)\n                await getPokemonDetails(e);\n            else\n                dispatcher({ type: UNSELECT_POKEMONS });\n            setModal(!modal);\n        }\n    }\n\n    const handleComparison = () => {\n        setModal(false);\n        comparing(true);\n    }\n\n    const getPokemonDetails = async (e) => {\n        const cardId = e.props.id\n        const savedPokemonsFilter = await savedPokemons.filter(pokemon => (pokemon.id === (cardId)))\n        if (savedPokemonsFilter[0] !== undefined) {\n            if (isComparing)\n                dispatcher({ type: COMPARE_POKEMON, payload: { selectedPokemon: savedPokemonsFilter[0] } })\n            else\n                dispatcher({ type: SELECT_SAVED_POKEMON, payload: { id: (cardId) } })\n        } else {\n            const pokemonData = await fetchPokemonData(cardId);\n            dispatcher({ type: isComparing ? COMPARE_POKEMON : SELECT_POKEMON, payload: { selectedPokemon: pokemonData } });\n            dispatcher({ type: SAVE_POKEMON, payload: { selectedPokemon: pokemonData } })\n        }\n    }\n\n    const fetchPokemonData = async (id) => {\n        var pokemonAbilities = [], pokemonStats = [], pokemonTypes = [], response1, response2\n\n        await axios.all([\n            axios.get('https://pokeapi.co/api/v2/pokemon/' + id),\n            axios.get('https://pokeapi.co/api/v2/pokemon-species/' + id)\n        ]).then(axios.spread((res1, res2) => {\n            response1 = res1.data;\n            response2 = res2.data\n\n            for (var i = 0; i < res1.data.stats.length; i++) {\n                pokemonStats.push(JSON.parse(\n                    \"{ \\\"name\\\": \\\"\" + res1.data.stats[i].stat.name + \"\\\", \\\"power\\\": \\\"\" + res1.data.stats[i].base_stat + \"\\\" }\"\n                ))\n            }\n\n            for (i = 0; i < res1.data.abilities.length; i++) {\n                pokemonAbilities.push(res1.data.abilities[i].ability.name);\n            }\n\n            for (i = 0; i < res1.data.types.length; i++) {\n                pokemonTypes.push(res1.data.types[i].type.name);\n            }\n        }));\n\n        return {\n            id: id,\n            name: response1.name,\n            weight: response1.weight,\n            height: response1.height,\n            abilities: pokemonAbilities,\n            types: pokemonTypes,\n            stats: pokemonStats,\n            description: response2.flavor_text_entries[1].flavor_text,\n            gender: ((response1.gender_rate < 4) ? (response1.data.gender_rate = -1 ? \"Male\" : \"Undefined\") : \"Female\"),\n            imageUrl: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + id + \".png\"\n        }\n    }\n\n    const pokemonCards = pokemonList.map((pokemon, index) => {\n        if (props.searchInput.length !== 0) {\n            if (pokemon.name.includes(props.searchInput)) {\n                return (\n                    <ElementCard key={index + 1} name={pokemon.name} id={index + 1} onClick={modalToggle}\n                        img={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`} />\n                )\n            } else return \"\";\n        }\n\n        return (\n            <ElementCard key={index + 1} name={pokemon.name} id={index + 1} onClick={modalToggle}\n                img={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`} />\n        )\n    });\n\n    return (\n        <div>\n            <div className=\"mt-2 container\">\n                <div className=\"card-deck justify-content-center\">\n                    {pokemonCards}\n                </div>\n\n                {(isComparing && !comparisonModal) &&\n                    <Toast style={{\n                        position: \"fixed\",\n                        right: \"20px\",\n                        top: \"70px\"\n                    }}>\n                        <ToastHeader>\n                            Comparing pokemon\n                        </ToastHeader>\n                        <ToastBody className=\"text-uppercase font-weight-bold\">\n                            {selectedPokemon.name}\n                        </ToastBody>\n                    </Toast>\n                }\n\n                <Modal isOpen={modal} toggle={modalToggle}>\n                    <ModalHeader className=\"text-uppercase\" toggle={modalToggle}>\n                        <b>{selectedPokemon.name}</b>\n                        <Button size=\"sm\" className=\"ml-2 text-wrap\" onClick={handleComparison}>Compare to...</Button>\n                    </ModalHeader>\n                    {modal &&\n                        <PokemonDetails selectedPokemon={selectedPokemon} />\n                    }\n                </Modal>\n\n                <Modal isOpen={comparisonModal} toggle={modalToggle}>\n                    <ModalHeader className=\"text-uppercase\" toggle={modalToggle}>\n                        <b>{selectedPokemon.name} vs. {pokemonBeingCompared.name}</b>\n                    </ModalHeader>\n                    {comparisonModal &&\n                        <PokemonComparison pokemon1={selectedPokemon} pokemon2={pokemonBeingCompared} />\n\n                    }\n                </Modal>\n            </div >\n        </div>\n    );\n}\n\nexport default PokemonList;","import React from 'react';\n\nexport default function ItemDetails(props) {\n    const selectedItem = props.selectedItem\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-4 \">\n                    <img className=\"mt-4\" src={selectedItem.imageUrl} width=\"150px\" alt=\"\" />\n                </div>\n                <div className=\"col-8\">\n                    <br />\n                    <p>{selectedItem.description}</p>\n                    <hr />\n                    <table width=\"100%\" >\n                        <tbody>\n                            <tr>\n                                <th width=\"30%\">Cost</th>\n                                {selectedItem.attributes[0] !== undefined &&\n                                    <th width=\"70%\">Attributes</th>\n                                }\n                            </tr>\n                            <tr>\n                                <td>{selectedItem.cost}</td>\n                                <td>\n                                    <ul>\n                                        {selectedItem.attributes.map((item, index) => <li key={index}>{item}</li>)}\n                                    </ul>\n                                </td>\n\n                            </tr>\n                        </tbody>\n                    </table>\n                    <br />\n                </div>\n            </div>\n        </div >\n    );\n}\n","export const SELECT_ITEM = \"SELECT_ITEM\";\nexport const UNSELECT_ITEM = \"UNSELECT_ITEM\";\nexport const SELECT_SAVED_ITEM = \"SELECT_SAVED_ITEM\";\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport ElementCard from './ElementCard'\nimport ItemDetails from './ItemDetails'\nimport { CardDeck, Modal, ModalHeader } from 'reactstrap'\nimport { UNSELECT_ITEM, SELECT_ITEM, SELECT_SAVED_ITEM } from '../redux/actions/itemActions';\n\nexport default function ItemsList(props) {\n  const [itemsList, setItemsList] = useState([]);\n  const [reloader] = useState(0);\n  const [index, setIndex] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n\n  const selectedItem = useSelector(state => state.itemReducers.selectedItem);\n  const savedItems = useSelector(state => state.itemReducers.savedItems);\n  const dispatcher = useDispatch();\n\n  useEffect(() => {\n    axios.get(\"https://pokeapi.co/api/v2/item\")\n      .then(res => setItemsList(res.data.results))\n  }, [reloader])\n\n  window.onscroll = (() => {\n    if (isLoading) return;\n    if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n      loadItems();\n    }\n  });\n\n  const modalToggle = async (e) => {\n    if (!modal)\n      await getItemDetails(e.props.id);\n    else\n      dispatcher({ type: UNSELECT_ITEM })\n    setModal(!modal);\n  }\n\n  const getItemDetails = async (itemId) => {\n    const checkIfSaved = savedItems.filter(item => item.id === itemId)\n    if (checkIfSaved[0] === undefined) {\n      dispatcher({ type: SELECT_ITEM, payload: { selectedItem: await fetchDetails(itemId) } })\n    } else {\n      dispatcher({ type: SELECT_SAVED_ITEM, payload: { id: itemId } })\n    }\n  }\n\n  const fetchDetails = async (itemId) => {\n    var response\n    var itemAttributes = [];\n\n    await axios.get(\"https://pokeapi.co/api/v2/item/\" + itemId)\n      .then(res => {\n        response = res.data;\n        for (let i = 0; i < response.attributes.length; i++) {\n          itemAttributes.push(response.attributes[i].name);\n        }\n      })\n\n    return {\n      id: itemId,\n      name: response.name,\n      cost: response.cost,\n      description: response.effect_entries[0].effect,\n      attributes: itemAttributes,\n      imageUrl: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/\" + response.name + \".png\"\n    }\n  }\n\n\n  const itemsCards = itemsList.map((item, index) => {\n    if (props.searchInput !== undefined) {\n      if (item.name.includes(props.searchInput)) {\n        return (\n          <ElementCard id={index + 1} key={index + 1} name={item.name} onClick={modalToggle}\n            img={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/\" + item.name + \".png\"} />\n        )\n      } else return \"\"\n    }\n\n    return (\n      <ElementCard id={index + 1} key={index + 1} name={item.name} onClick={modalToggle}\n        img={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/\" + item.name + \".png\"} />\n    )\n  })\n\n  const loadItems = async () => {\n    setLoading(true);\n    const newIndex = index + 20;\n    setIndex(newIndex);\n    const res = await axios.get(\"https://pokeapi.co/api/v2/item/?offset=\" + newIndex + \"&limit=20\")\n    setItemsList([...itemsList, ...res.data.results])\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"container mt-2\">\n      <CardDeck className=\"justify-content-center\">\n        {itemsCards}\n      </CardDeck>\n\n      <Modal isOpen={modal} toggle={modalToggle}>\n        <ModalHeader className=\"text-uppercase\" toggle={modalToggle}>\n          <b>{selectedItem.name}</b>\n        </ModalHeader>\n        {modal &&\n          <ItemDetails selectedItem={selectedItem} />\n        }\n      </Modal>\n    </div >\n  );\n}\n","import {\n    SELECT_POKEMON, SELECT_SAVED_POKEMON, UNSELECT_POKEMONS,\n    COMPARE_POKEMON, SAVE_POKEMON\n} from \"../actions/pokemonActions\"\n\nconst initialState = {\n    selectedPokemon: {},\n    comparison: {},\n    savedPokemons: []\n}\n\nfunction pokemonReducers(state = initialState, action) {\n    switch (action.type) {\n        case SELECT_POKEMON:\n            return {\n                ...state,\n                selectedPokemon: action.payload.selectedPokemon,\n            }\n        case SELECT_SAVED_POKEMON:\n            return {\n                ...state,\n                selectedPokemon: state.savedPokemons.filter(pokemon => pokemon.id === action.payload.id)[0]\n            }\n        case UNSELECT_POKEMONS:\n            return {\n                ...state, selectedPokemon: {}, comparison: {\n                }\n            }\n        case COMPARE_POKEMON:\n            return {\n                ...state,\n                comparison: action.payload.selectedPokemon\n            }\n        case SAVE_POKEMON:\n            return {\n                ...state,\n                savedPokemons: [...state.savedPokemons, action.payload.selectedPokemon]\n            }\n        default:\n            return state;\n    }\n}\n\nexport default pokemonReducers;","import { SELECT_ITEM, SELECT_SAVED_ITEM, UNSELECT_ITEM } from '../actions/itemActions'\n\nconst initialState = {\n    selectedItem: \"\",\n    savedItems: []\n}\n\nfunction itemReducers(state = initialState, action) {\n    switch (action.type) {\n        case SELECT_ITEM:\n            return {\n                selectedItem: action.payload.selectedItem,\n                savedItems: [...state.savedItems, action.payload.selectedItem]\n            }\n        case SELECT_SAVED_ITEM:\n            return {\n                ...state,\n                selectedItem: state.savedItems.filter(item => item.id === action.payload.id)[0]\n            }\n        case UNSELECT_ITEM:\n            return {\n                ...state,\n                selectedItem: {}\n            }\n        default:\n            return state;\n    }\n}\n\nexport default itemReducers;","import { createStore, combineReducers } from \"redux\";\nimport pokemonReducers from './redux/reducers/pokemonReducers';\nimport itemReducers from './redux/reducers/itemReducers'\n\nconst rootReducer = combineReducers({\n    pokemonReducers,\n    itemReducers\n})\n\nconst store = createStore(rootReducer,\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && \nwindow.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","import React from 'react';\nimport { Jumbotron, Button, CardDeck } from 'reactstrap';\nimport libraries from '../libraries'\nimport { Link } from 'react-router-dom'\nimport ElementCard from './ElementCard';\n\nconst librariesList = libraries.map((item, index) => {\n    return (\n        <ElementCard id={index} key={index} img={item.src} name={item.title}/>\n    )\n})\n\n\nconst Home = () => {\n    return (\n        <div className=\"container\">\n            <br />\n            <Jumbotron className=\"text-center\">\n                <h1 className=\"display-3\">Welcome to PokéApp!</h1>\n                <p>All the information comes from <a href=\"https://pokeapi.co\">PokéApi</a> by HTTP requests.</p>\n                <p className=\"lead\">\n                    <Link to=\"/pokemons\">\n                        <Button className=\"mr-2\" color=\"secondary\">Check the Pokémon list</Button>\n                    </Link>\n                    <Link to=\"/items\">\n                        <Button color=\"secondary\">Check the items list</Button>\n                    </Link>\n\n                </p>\n            </Jumbotron>\n            <hr />\n            <h4 className=\"text-center\">Some of the libraries that i've used for this:</h4>\n            <br />\n            <CardDeck className=\"justify-content-center\">\n                {librariesList}\n            </CardDeck>\n        </div>\n    );\n};\n\nexport default Home;","const libraries = [\n    {\n        title: \"Redux\",\n        src: \"https://i2.wp.com/blog.js-republic.com/wp-content/uploads/2016/11/logo-redux.png?resize=500%2C500\",\n        description: \"Used for keep the app's state\",\n        url: \"https://react-redux.js.org/\"\n    },\n    {\n        title: \"Reactstrap\",\n        src: \"https://reactstrap.github.io/assets/logo.png\",\n        description: \"Used for creating UI components and elements\",\n        url: \"https://reactstrap.github.io/\"\n    },\n    {\n        title: \"Bootstrap\",\n        src: \"http://pluspng.com/img-png/bootstrap-png-bootstrap-512.png\",\n        description: \"Used for styling components\",\n        url: \"https://getbootstrap.com/\"\n    },\n    {\n        title: \"Axios\",\n        src: \"https://user-images.githubusercontent.com/8939680/57233882-20344080-6fe5-11e9-9086-d20a955bed59.png\",\n        description: \"Used for making some HTTP Requests\",\n        url: \"https://github.com/axios/axios\"\n    },\n    {\n        title: \"Recharts\",\n        src: \"https://jquery-plugins.net/image/plugin/recharts-composable-chart-library-built-with-react-and-d3.png\",\n        description: \"Used for creating charts with Pokemon's information\",\n        url: \"http://recharts.org/en-US\"\n    },\n    {\n        title: \"React Router\",\n        src: \"https://miro.medium.com/max/1024/1*DU5n6M4z1mRlxEl_Co6EGg.jpeg\",\n        description: \"Used for navigate between different pages\",\n        url: \"https://reacttraining.com/react-router/web/guides/quick-start\"\n    },\n    {\n        title: \"Vibrant.js\",\n        src: \"https://cdn.freebiesbug.com/wp-content/uploads/2015/06/color-extractio-effect-codrops-580x435.jpg\",\n        description: \"Used for extract the prominent color of each Pokemon\",\n        url: \"https://jariz.github.io/vibrant.js/\"\n    },\n\n];\n\nexport default libraries;","import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport PokemonList from './components/PokemonList';\nimport ItemsList from \"./components/ItemsList\"\nimport { Provider } from 'react-redux'\nimport store from \"./store\"\nimport Home from './components/Home';\n\nfunction App() {\n  const [searchInput, setSearch] = useState(\"\");\n\n  const handleChange = e => {\n    setSearch(e.target.value.toLowerCase());\n  }\n\n  return (\n    <Provider store={store}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Navbar onChange={handleChange} />\n          <Home />\n        </Route>\n        <Route exact path=\"/pokemons\">\n          <Navbar onChange={handleChange} />\n          <PokemonList searchInput={searchInput} />\n        </Route>\n        <Route path=\"/items\">\n          <Navbar onChange={handleChange} />\n          <ItemsList searchInput={searchInput}/>\n        </Route>\n        <Route path=\"*\">\n          <h2 className=\"mx-2\">Page not found</h2>\n        </Route>\n      </Switch>\n    </Provider>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n    <Router basename=\"/\">\n        <App />\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}